{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargs\\\\OneDrive\\\\Desktop\\\\Tree visualizer\\\\Tree-Visualizer-React-Project\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './styles/App.css';\nimport './styles/BSTStyle.css';\nimport './styles/popup.css';\nimport './styles/mainMenuStyle.css';\nimport Menu from './components/Menu';\nimport BSTree from './components/bst/BSTree';\nimport AVLTree from './components/avl/AVLTree';\nimport usePopup from './hooks/usePopup';\nimport MainPopup from './components/MainPopup';\n\nfunction App() {\n  const [state, setState] = useState([true, false, false]);\n  const [popup, togglePopup] = usePopup();\n  useEffect(() => {\n    togglePopup();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, state[0] === true && /*#__PURE__*/React.createElement(Menu, {\n    statefunc: setState,\n    togglePopup: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }\n  }), state[1] === true && /*#__PURE__*/React.createElement(BSTree, {\n    statefunc: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 26\n    }\n  }), state[2] === true && /*#__PURE__*/React.createElement(AVLTree, {\n    statefunc: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  }), popup ? /*#__PURE__*/React.createElement(MainPopup, {\n    toggle: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }) : null);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gargs/OneDrive/Desktop/Tree visualizer/Tree-Visualizer-React-Project/src/App.js"],"names":["React","useEffect","useState","Menu","BSTree","AVLTree","usePopup","MainPopup","App","state","setState","popup","togglePopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,kBAAP;AACA,OAAO,uBAAP;AACA,OAAO,oBAAP;AACA,OAAO,4BAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,CAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,EAArC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAAC,CAAD,CAAL,KAAW,IAAZ,iBAAqB,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,QAAjB;AAA2B,IAAA,WAAW,EAAEE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,EAEGH,KAAK,CAAC,CAAD,CAAL,KAAW,IAAZ,iBAAqB,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvB,EAGGD,KAAK,CAAC,CAAD,CAAL,KAAW,IAAZ,iBAAqB,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHvB,EAIEC,KAAK,gBAAG,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAwC,IAJ/C,CADD;AAQA;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport './styles/App.css'\r\nimport './styles/BSTStyle.css'\r\nimport './styles/popup.css'\r\nimport './styles/mainMenuStyle.css'\r\nimport Menu from './components/Menu'\r\nimport BSTree from './components/bst/BSTree'\r\nimport AVLTree from './components/avl/AVLTree'\r\nimport usePopup from './hooks/usePopup'\r\nimport MainPopup from './components/MainPopup'\r\n\r\nfunction App() {\r\n\tconst [state, setState] = useState([true,false,false]);\r\n\tconst [popup, togglePopup] = usePopup();\r\n\r\n\tuseEffect(() => {\r\n\t\t\ttogglePopup();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{(state[0]===true) && <Menu statefunc={setState} togglePopup={togglePopup}/>}\r\n\t\t\t{(state[1]===true) && <BSTree statefunc={setState} />}\r\n\t\t\t{(state[2]===true) && <AVLTree statefunc={setState} />}\r\n\t\t\t{popup ? <MainPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}