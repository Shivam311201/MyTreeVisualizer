{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargs\\\\OneDrive\\\\Desktop\\\\Tree visualizer\\\\Tree-Visualizer-React-Project\\\\src\\\\components\\\\maxHeap\\\\MaxH.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaxHeap from './DataStructure';\nimport MaxHeapMenu from './MaxHeapMenu';\nimport MaxHeapPopup from './MaxHeapPopup';\nimport useDelError from '../../hooks/useDelError';\nimport { Icon } from '@iconify/react';\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline';\nimport usePopup from '../../hooks/usePopup';\n\nfunction MaxH(props) {\n  //hooks\n  const [maxHeap, setMaxHeap] = useState(null);\n  const [heapHtml, setHeapHtml] = useState(null);\n  const [popup, togglePopup] = usePopup();\n  const [delError, setDelError] = useDelError(heapHtml); //Initializing MaxHeap\n\n  useEffect(() => {\n    let tempHeap = new MaxHeap();\n    setMaxHeap(tempHeap);\n    return () => {\n      setMaxHeap(null);\n      setHeapHtml(null);\n    };\n  }, []); //Insert\n\n  const insert = value => {\n    value = parseInt(value);\n    if (!value) return;\n    let tempHeap = maxHeap;\n    tempHeap.insert(value);\n    setMaxHeap(tempHeap);\n    setHeapHtml(tempHeap.html);\n  }; //Extract the smallest element\n\n\n  const extract = () => {\n    let tempHeap = maxHeap;\n    tempHeap.removeTop();\n    setMaxHeap(tempHeap);\n    setHeapHtml(tempHeap.html);\n  }; //Delete Element\n\n\n  const remove = value => {\n    value = parseInt(value);\n    let tempHeap = maxHeap;\n\n    if (tempHeap.heap.indexOf(value) === -1) {\n      setDelError(true);\n      return;\n    }\n\n    tempHeap.deleteEl(value);\n    setMaxHeap(tempHeap);\n    setHeapHtml(tempHeap.html);\n  }; //Generate Max Heap with random values\n\n\n  const random = value => {\n    value = parseInt(value);\n    let tempHeap = new MaxHeap(value);\n    setMaxHeap(tempHeap);\n    setHeapHtml(tempHeap.html);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Max Heap\", ' ', /*#__PURE__*/React.createElement(\"button\", {\n    className: \"i\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: questionMarkCircleOutline,\n    width: \"25px\",\n    height: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.selector('menu'),\n    className: \"main-menu-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(MaxHeapMenu, {\n    insert: insert,\n    extract: extract,\n    remove: remove,\n    random: random,\n    delError: delError ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"traversal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }, maxHeap && maxHeap.heap.length ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, \"Heap:\", maxHeap.heap.map((element, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, element))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, \"Heap is Empty\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, heapHtml)), popup ? /*#__PURE__*/React.createElement(MaxHeapPopup, {\n    toggle: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }) : null);\n}\n\nexport default MaxH;","map":{"version":3,"sources":["C:/Users/gargs/OneDrive/Desktop/Tree visualizer/Tree-Visualizer-React-Project/src/components/maxHeap/MaxH.js"],"names":["React","useState","useEffect","MaxHeap","MaxHeapMenu","MaxHeapPopup","useDelError","Icon","questionMarkCircleOutline","usePopup","MaxH","props","maxHeap","setMaxHeap","heapHtml","setHeapHtml","popup","togglePopup","delError","setDelError","tempHeap","insert","value","parseInt","html","extract","removeTop","remove","heap","indexOf","deleteEl","random","selector","length","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MaxHeap from './DataStructure'\r\nimport MaxHeapMenu from './MaxHeapMenu'\r\nimport MaxHeapPopup from './MaxHeapPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\n\r\nfunction MaxH(props) {\r\n\t//hooks\r\n\tconst [maxHeap, setMaxHeap] = useState(null)\r\n\tconst [heapHtml, setHeapHtml] = useState(null)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\tconst [delError, setDelError] = useDelError(heapHtml)\r\n\r\n\t//Initializing MaxHeap\r\n\tuseEffect(() => {\r\n\t\tlet tempHeap = new MaxHeap()\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\treturn () => {\r\n\t\t\tsetMaxHeap(null)\r\n\t\t\tsetHeapHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\t//Insert\r\n\tconst insert = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tif (!value) return\r\n\t\tlet tempHeap = maxHeap\r\n\t\ttempHeap.insert(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Extract the smallest element\r\n\tconst extract = () => {\r\n\t\tlet tempHeap = maxHeap\r\n\t\ttempHeap.removeTop()\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Delete Element\r\n\tconst remove = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = maxHeap\r\n\r\n\t\tif (tempHeap.heap.indexOf(value) === -1) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttempHeap.deleteEl(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Generate Max Heap with random values\r\n\tconst random = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = new MaxHeap(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tMax Heap{' '}\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<MaxHeapMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\textract={extract}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\trandom={random}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{maxHeap && maxHeap.heap.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\tHeap:\r\n\t\t\t\t\t\t{maxHeap.heap.map((element, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{element}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Heap is Empty</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{heapHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <MaxHeapPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MaxH\r\n"]},"metadata":{},"sourceType":"module"}