{"ast":null,"code":"import { useReducer } from 'react';\n\nfunction useTraversal(tree) {\n  const initialTraversal = {\n    list: [],\n    op: 'none'\n  };\n\n  const reducer = (state, action) => {\n    let list = [];\n\n    switch (action) {\n      case 'inorder':\n        tree.inorder(list);\n        return {\n          list: list,\n          op: 'Inorder'\n        };\n\n      case 'preorder':\n        tree.preorder(list);\n        return {\n          list: list,\n          op: 'Preorder'\n        };\n\n      case 'postorder':\n        tree.postorder(list);\n        return {\n          list: list,\n          op: 'Postorder'\n        };\n\n      case 'clear':\n        return initialTraversal;\n\n      default:\n        return state;\n    }\n  };\n\n  const [traversalList, traversalDispatch] = useReducer(reducer, initialTraversal);\n  return [traversalList, traversalDispatch];\n}\n\nexport default useTraversal;","map":{"version":3,"sources":["C:/Users/gargs/OneDrive/Desktop/Tree visualizer/Tree-Visualizer-React-Project/src/hooks/useTraversal.js"],"names":["useReducer","useTraversal","tree","initialTraversal","list","op","reducer","state","action","inorder","preorder","postorder","traversalList","traversalDispatch"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,gBAAgB,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,EAAE,EAAE;AAAhB,GAAzB;;AACD,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,QAAIJ,IAAI,GAAG,EAAX;;AACA,YAAQI,MAAR;AACC,WAAK,SAAL;AACCN,QAAAA,IAAI,CAACO,OAAL,CAAaL,IAAb;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,EAAE,EAAE;AAAlB,SAAP;;AACD,WAAK,UAAL;AACCH,QAAAA,IAAI,CAACQ,QAAL,CAAcN,IAAd;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,EAAE,EAAE;AAAlB,SAAP;;AACD,WAAK,WAAL;AACCH,QAAAA,IAAI,CAACS,SAAL,CAAeP,IAAf;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,EAAE,EAAE;AAAlB,SAAP;;AACD,WAAK,OAAL;AACC,eAAOF,gBAAP;;AACD;AACC,eAAOI,KAAP;AAbF;AAeC,GAjBF;;AAmBC,QAAM,CAACK,aAAD,EAAgBC,iBAAhB,IAAqCb,UAAU,CACrDM,OADqD,EAErDH,gBAFqD,CAArD;AAKA,SAAO,CAACS,aAAD,EAAgBC,iBAAhB,CAAP;AACD;;AAED,eAAeZ,YAAf","sourcesContent":["import {useReducer} from 'react'\r\n\r\nfunction useTraversal(tree) {\r\n  const initialTraversal = { list: [], op: 'none' }\r\n\tconst reducer = (state, action) => {\r\n\t\tlet list = []\r\n\t\tswitch (action) {\r\n\t\t\tcase 'inorder':\r\n\t\t\t\ttree.inorder(list)\r\n\t\t\t\treturn { list: list, op: 'Inorder' }\r\n\t\t\tcase 'preorder':\r\n\t\t\t\ttree.preorder(list)\r\n\t\t\t\treturn { list: list, op: 'Preorder' }\r\n\t\t\tcase 'postorder':\r\n\t\t\t\ttree.postorder(list)\r\n\t\t\t\treturn { list: list, op: 'Postorder' }\r\n\t\t\tcase 'clear':\r\n\t\t\t\treturn initialTraversal\r\n\t\t\tdefault:\r\n\t\t\t\treturn state\r\n\t\t}\r\n  }\r\n  \r\n  const [traversalList, traversalDispatch] = useReducer(\r\n\t\treducer,\r\n\t\tinitialTraversal\r\n  )\r\n  \r\n  return [traversalList, traversalDispatch]\r\n}\r\n\r\nexport default useTraversal\r\n"]},"metadata":{},"sourceType":"module"}